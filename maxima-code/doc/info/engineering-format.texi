Engineering-format changes the way maxima outputs floating-point numbers
to the notation engineers are used to: @code{a*10^b} with @code{b} dividable by
three.
@menu
* Functions and Variables for engineering-format::
* Known bugs in engineering-format::
@end menu

@node Functions and Variables for engineering-format, Known bugs in engineering-format, engineering-format-pkg, engineering-format-pkg
@section Functions and Variables for engineering-format

@c -----------------------------------------------------------------------------
@anchor{engineering_format_floats}
@defvr {Option variable} engineering_format_floats
Default value: @code{true} 


This variable allows to temporarily switch off engineering-format.
@c ===beg===
@c load("engineering-format");
@c float(sin(10)/10000);
@c engineering_format_floats:false$
@c float(sin(10)/10000);
@c ===end===
@example
@group
(%i1) load("engineering-format");
(%o1) 
    /maxima/share/contrib/engineering-format.lisp
@end group
@group
(%i2) float(sin(10)/10000);
(%o2)                - 54.40211108893698e-6
@end group
(%i3) engineering_format_floats:false$
@group
(%i4) float(sin(10)/10000);
(%o4)                - 5.440211108893698e-5
@end group
@end example

See also @mref{fpprintprec} and @mref{float}.

@opencatbox
@category{Display functions} @category{Global flags} @category{Share packages}
@closecatbox
@end defvr

@c -----------------------------------------------------------------------------
@node Known bugs in engineering-format, , Functions and Variables for engineering-format, engineering-format-pkg
@section Known Bugs

The output routine of SBCL 1.3.0 has a bug that sometimes causes the exponent not
to be dividable by three. The value of the displayed number is still valid in
this case.
